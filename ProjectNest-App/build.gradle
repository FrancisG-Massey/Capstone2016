buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots'
        }
    }
    dependencies {
        classpath 'org.javafxports:jfxmobile-plugin:1.0.10-SNAPSHOT'
    }
}

apply plugin: 'org.javafxports.jfxmobile'
apply plugin: 'eclipse'
apply plugin: 'pmd'
apply plugin: 'jdepend'

task jdependReport(dependsOn: jdependMain, group: 'verification', description: 'Generates a HTML report after executing jdepend checks.') << {
   ant.xslt(
      in: "$reporting.baseDir/jdepend/main.xml",
      style: "$rootDir/conf/jdepend/jdepend-report.xslt",
      out:"$reporting.baseDir/jdepend/main.html")
}

check {
   dependsOn += ['jdependReport']
}

eclipse {
	classpath {
		downloadSources = true
     	downloadJavadoc = true
   	}
}

def hasGluonLogin = false

repositories {
	mavenLocal()
    jcenter()
    maven {
        url 'http://nexus.gluonhq.com/nexus/content/repositories/releases'
    }
    maven {
       url 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    if (project.hasProperty('gluonNexusUsername') && project.hasProperty('gluonNexusPassword')) {
    	hasGluonLogin = true
	    maven {
	    	url 'http://nexus.gluonhq.com/nexus/content/repositories/gluon-oss-daily/' 
		  	credentials { 
		    	username gluonNexusUsername
		    	password gluonNexusPassword
		  	} 
		}
	    maven {
	    	url 'http://nexus.gluonhq.com/nexus/content/repositories/gluon-private-releases/' 
		  	credentials { 
		    	username gluonNexusUsername
		    	password gluonNexusPassword
		  	} 
		}
	}
}

mainClassName = 'org.nestnz.app.NestApplication'

dependencies {
    compile 'com.gluonhq:charm-glisten:3.0.1-b7'
    compile 'com.gluonhq:connect:1.0.2-SNAPSHOT'
    compile 'com.gluonhq:maps:1.0.1-SNAPSHOT'
    
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.+'

    androidRuntime 'com.gluonhq:charm-glisten-android:3.0.1-b7'
    
    iosRuntime 'com.gluonhq:charm-glisten-ios:3.0.1-b7'
    
    desktopRuntime 'com.gluonhq:charm-glisten-desktop:3.0.1-b7'    
}

jfxmobile {
	downConfig {
        version '3.0.0-SNAPSHOT'
        plugins 'position', 'settings', 'storage', 'vibration'
    }

	javafxportsVersion = hasGluonLogin ? '8.60.d161002' : '8.60.7'

    android {
        manifest = 'src/android/AndroidManifest.xml'
        
	    dexOptions {
	        incremental true
	        preDexLibraries = false
	        jumboMode = false
	        javaMaxHeapSize "2048M"
	    }
    }
    ios {
        infoPList = file('src/ios/Default-Info.plist')
        forceLinkClasses = [
                'com.gluonhq.**.*',
                'io.datafx.**.*',
                'javax.annotations.**.*',
                'javax.inject.**.*',
                'javax.json.**.*',
                'org.glassfish.json.**.*',
                'org.nestnz.app.ios.**.*'
        ]
    }
}

/*retrolambda {
  jdk System.getenv("JAVA8_HOME")
  oldJdk System.getenv("JAVA7_HOME")
  javaVersion JavaVersion.VERSION_1_7
  defaultMethods false
  incremental true
}*/

//Stop the "test" task from using oldJdk (which doesn't include JavaFX)
project.tasks.getByName("test").doFirst {
	executable "java"
}
