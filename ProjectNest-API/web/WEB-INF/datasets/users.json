{
    "licence": "
        --------------------------------------------------------------------------
        -- Copyright (C) 2016, Nest NZ
        --
        -- This program is free software: you can redistribute it and/or modify
        -- it under the terms of the GNU General Public License as published by
        -- the Free Software Foundation, either version 3 of the License, or
        -- (at your option) any later version.
        --
        -- This program is distributed in the hope that it will be useful,
        -- but WITHOUT ANY WARRANTY; without even the implied warranty of
        -- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -- GNU General Public License for more details.
        --
        -- You should have received a copy of the GNU General Public License
        -- along with this program.  If not, see <http://www.gnu.org/licenses/>.
        --------------------------------------------------------------------------
    ",
    "before": "
        SELECT
            es.user_id,
            es.user_isadmin,
            es.session_expirestimestamp
        FROM 
            extend_session(
                #string:session-token#::text, 
                #string:session-timeout#::interval
            ) es 
        WHERE es IS NOT NULL;
    ",
    "GET" : "
        -- Whether the logged-in user is an admin (can be user or trapline-user) or not
        WITH has_permission AS (
            SELECT 
                (#boolean:logged-user-isadmin# OR 
                (#bigint:logged-user-id# IN (
                    SELECT 
                        tlu.traplineuser_userid
                    FROM 
                        traplineuser tlu
                    WHERE
                        (tlu.traplineuser_isadmin = true)
                ))) AS is_admin
        ),
        loggeduser_traplines AS (
            SELECT tlu.traplineuser_traplineid as tl_id
            FROM traplineuser tlu
            WHERE traplineuser_userid = #bigint:logged-user-id#
        ),
        loggeduser AS (
            SELECT u.user_createduserid
            FROM users u
            WHERE u.user_id = #bigint:logged-user-id#
        )
        SELECT
            u.user_id as id, 
            u.user_name as username,
            u.user_contactfullname as fullname,
            u.user_contactemail as email,
            u.user_contactphone as phone,
            u.user_createdtimestamp as created_timestamp, 
            u.user_createduserid as created_user_id, 
            u.user_isadmin as admin, 
            u.user_isinactive as inactive,
            (#boolean:logged-user-isadmin# OR (u.user_id = #bigint:logged-user-id#)) as can_edit
        FROM
            users u
            LEFT JOIN traplineuser tlu ON tlu.traplineuser_userid = u.user_id,
            has_permission hp,
            loggeduser lu
        WHERE
            -- Only show user records they have permission to see
            ((hp.is_admin = true) OR (u.user_id = #bigint:logged-user-id#) OR (u.user_id = lu.user_createduserid) OR 
            ((tlu.traplineuser_id IS NOT NULL) AND (tlu.traplineuser_traplineid IN (SELECT tl_id from loggeduser_traplines)))) AND

            -- Allow records to be filtered by fields
            ((#bigint:id# IS NULL) OR (u.user_id = #bigint:id#)) AND
            ((#bigint:created-user-id# IS NULL) OR (u.user_createduserid = #bigint:created-user-id#)) AND
            ((#string:name# IS NULL) OR (lower(u.user_name) LIKE lower('%' || #string:name# || '%'))) AND
            ((#boolean:admin# IS NULL) OR (u.user_isadmin = #boolean:admin#)) AND

            -- Only allow admins to filter by inactive flag, return only active by default
            ((((#boolean:inactive# IS NULL) OR (#boolean:inactive# = false)) AND (u.user_isinactive = false)) OR 
            ((#boolean:inactive# IS NOT NULL) AND (#boolean:inactive# = true) AND (#boolean:logged-user-isadmin# = true) AND (u.user_isinactive = true)))

        GROUP BY
            u.user_id
        ORDER BY
            u.user_id;
    ",
    "POST" : "
        WITH has_permission AS (
            SELECT 
                (#boolean:logged-user-isadmin# OR 
                (#bigint:logged-user-id# IN (
                    SELECT 
                        tlu.traplineuser_userid
                    FROM 
                        traplineuser tlu
                    WHERE
                        (tlu.traplineuser_isadmin = true)
                ))) AS has_permission
        )
        INSERT INTO users (
            user_name,
            user_password,
            user_contactfullname,
            user_contactphone,
            user_contactemail,
            user_createdtimestamp,
            user_createduserid,
            user_isadmin,
            user_isinactive
        )
        SELECT
            #string:username#,
            #string-bcrypt:password#,
            #string:fullname#,
            #string:phone#,
            #string:email#,
            now()::timestamp,
            #bigint:logged-user-id#,

            -- trapline-admins can create users, but not admin-users unless they are also user-admins
            CASE WHEN (#boolean:logged-user-isadmin# = true) THEN (#boolean:admin#) ELSE (false) END,
            false
        FROM 
            has_permission hp
        WHERE
            (#bigint:id# IS NULL) AND 
            (#string:email# IS NOT NULL) AND (#string:password# IS NOT NULL) AND
            hp.has_permission
        RETURNING
            user_id;
    ",
    "PUT" : "
        UPDATE users
        SET
            user_name = #string:username#,
            user_password = #string-bcrypt:password#,
            user_contactfullname = #string:fullname#,
            user_contactphone = #string:phone#,
            user_contactemail = #string:email#,
            user_isadmin = #boolean:admin#
        WHERE 
            (user_id = #bigint:id#) AND
            (#boolean:logged-user-isadmin# OR (user_id = #bigint:logged-user-id#))
        RETURNING
            user_id;
    ",
    "DELETE" : "
        UPDATE users
        SET
            user_isinactive = true
        WHERE
            (user_id = #bigint:id#) AND
            (#boolean:logged-user-isadmin# OR (user_id = #bigint:logged-user-id#))
        RETURNING user_id;

        DELETE FROM session s
        WHERE 
            (s.session_userid = #bigint:id#) AND
            (#boolean:logged-user-isadmin# OR (s.session_userid = #bigint:logged-user-id#));

        DELETE FROM users
        WHERE 
            (user_id = #bigint:id#) AND
            (#bigint:id# NOT IN (SELECT traplineuser_userid FROM traplineuser)) AND
            (#bigint:id# NOT IN (SELECT catch_userid FROM catch)) AND
            (#boolean:logged-user-isadmin# OR (user_id = #bigint:logged-user-id#));
    "
}