{
    "before": "
        SELECT
            es.user_id,
            es.user_isadmin,
            es.session_expirestimestamp
        FROM 
            extend_session(
                #string:session-token#::text, 
                #string:session-timeout#::interval
            ) es 
        WHERE es IS NOT NULL;
    ",
    "GET" : "
        WITH has_admin AS (
            SELECT (count(*) > 0)::boolean as is_admin
            FROM (
                SELECT 
                    true WHERE #boolean:logged-user-isadmin# = true
                UNION
                SELECT 
                    tlu.traplineuser_isadmin 
                FROM 
                    traplineuser tlu
                WHERE 
                    tlu.traplineuser_userid = #bigint:logged-user-id#
            ) cte_ha
        ),
        loggeduser_traplines AS (
            SELECT 
                tlu.traplineuser_traplineid as tl_id
            FROM 
                traplineuser tlu
            WHERE 
                traplineuser_userid = #bigint:logged-user-id#
        )
        SELECT
            u.user_id as id, 
            u.user_name as username,
            u.user_contactfullname as fullname,
            u.user_contactemail as email,
            u.user_contactphone as phone,
            u.user_createdtimestamp as created_timestamp, 
            u.user_createduserid as created_user_id, 
            u.user_isadmin as admin, 
            u.user_isinactive as inactive,
            (#boolean:logged-user-isadmin# OR (u.user_id = #bigint:logged-user-id#)) as can_edit
        FROM
            users u
            JOIN traplineuser tlu ON tlu.traplineuser_userid = u.user_id,
            has_admin ha
        WHERE
            ((ha.is_admin = true) OR (u.user_id = #bigint:logged-user-id#) OR (tlu.traplineuser_userid IN (SELECT tl_id from loggeduser_traplines))) AND
            ((#bigint:id# IS NULL) OR (u.user_id = #bigint:id#)) AND
            ((#bigint:created-user-id# IS NULL) OR (u.user_createduserid = #bigint:created-user-id#)) AND
            ((#string:name# IS NULL) OR (lower(u.user_name) LIKE lower('%' || #string:name# || '%'))) AND
            ((#boolean:admin# IS NULL) OR (u.user_isadmin = #boolean:admin#)) AND

            -- Only allow admins to filter by inactive flag, return only active by default
            ((((#boolean:inactive# IS NULL) OR (#boolean:inactive# = false)) AND (u.user_isinactive = false)) OR 
            ((#boolean:inactive# IS NOT NULL) AND (#boolean:inactive# = true) AND (#boolean:logged-user-isadmin# = true) AND (u.user_isinactive = true)))

        GROUP BY
            u.user_id
        ORDER BY
            u.user_id;
    ",
    "POST" : "
        INSERT INTO users (
            user_name,
            user_password,
            user_contactfullname,
            user_contactphone,
            user_contactemail,
            user_createdtimestamp,
            user_createduserid,
            user_isadmin,
            user_isinactive
        )
        SELECT
            #string:username#,
            #string-bcrypt:password#,
            #string:fullname#,
            #string:phone#,
            #string:email#,
            now()::timestamp,
            1,
            #boolean:admin#,
            false
        WHERE
            (#bigint:id# IS NULL) AND 
            (#string:email# IS NOT NULL) AND (#string:password# IS NOT NULL)
        RETURNING
            user_id;
    ",
    "PUT" : "
        UPDATE users
        SET
            user_name = #string:username#,
            user_password = #string-bcrypt:password#,
            user_contactfullname = #string:fullname#,
            user_contactphone = #string:phone#,
            user_contactemail = #string:email#,
            user_isadmin = #boolean:admin#
        WHERE 
            user_id = #bigint:id#
        RETURNING
            user_id;
    ",
    "DELETE" : "
        UPDATE users
        SET
            user_isinactive = true
        WHERE
            user_id = #bigint:id#
        RETURNING user_id;

        DELETE FROM session s
        WHERE s.session_userid = #bigint:id#;

        DELETE FROM users
        WHERE 
            (user_id = #bigint:id#) AND
            (#bigint:id# NOT IN (SELECT traplineuser_userid FROM traplineuser)) AND
            (#bigint:id# NOT IN (SELECT catch_userid FROM catch));
    "
}